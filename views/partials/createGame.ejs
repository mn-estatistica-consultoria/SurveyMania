<!DOCTYPE html>

<div class="modal fade" id="myStarstruckModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabe2">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="phaser-starstruck" style="width: 800px; height: 600px; margin: auto; margin-top: 6%"></div>
        </div>
    </div>
</div>

<div style="margin-top: 50px;">

	<canvas id="cvs1" width="250" height="600" style="margin-left: 100px; border: 1px solid;"></canvas>
	<canvas id="cvs2" width="800" height="600" style="margin-left: 100px; border: 1px solid;"></canvas>
    <br/>
    <button class="btn btn-success" data-toggle="modal" data-target="#myStarstruckModal" onclick="launch_phaser_editor(state.plateforms)" style="margin-left:1225px; padding:0 6px 2px 4px"><i class="fa fa-gamepad fa-lg"></i></button>
</div>

<script>
    window.onload = function ()
    {
        var canvas1 = document.getElementById("cvs1");
        var canvas2 = document.getElementById("cvs2");

        function getMousePos(canvas, evt) {
	        var rect = canvas.getBoundingClientRect();
	        return [ evt.clientX - rect.left, evt.clientY - rect.top];
      	}

        function Draw (can, pl)
        {
            if (state && state.dragging && pl == state.selectedPlateform) {
                can.getContext('2d').strokeStyle = 'rgb(245, 201, 100)';
                can.getContext('2d').strokeRect(pl.imageX, pl.imageY, pl.img.width, pl.img.height);
            }
            can.getContext('2d').drawImage(pl.img, pl.imageX, pl.imageY);
        }

        function DrawAllScene()
        {
            canvas2.width = canvas2.width;
            canvas2.getContext('2d').drawImage(backg, 0, 0);
            state.plateforms.forEach(function(pl) {
                Draw(canvas2, pl)
            });
            canvas2.getContext('2d').drawImage(player, 0, 0, 32, 48, 32, 550, 32, 48);
        }

        canvas1.onclick = function (e)
        {
            if (state && state.dragging) {
                state.dragging = false;
                DrawAllScene();
            }

            var mouseXY = getMousePos(e.target, e);
            state.AvailablePlateforms.forEach(function(pl) {
                if (mouseXY[0] > pl.imageX && mouseXY[0] < (pl.imageX + pl.img.width) && mouseXY[1] > pl.imageY && mouseXY[1] < (pl.imageY + pl.img.height)) {
                    var newPl = {img: new Image(), imageX: 10, imageY: 10, offsetX: 0, offsetY: 0};
                    newPl.img.src = pl.img.src;
                    state.plateforms.push(newPl);
                    Draw(canvas2, newPl);
                }
            });
        }

        canvas2.onclick = function (e)
        {
            if (state && state.dragging) {
                state.dragging = false;
                DrawAllScene();
                return;
            }

            var mouseXY = getMousePos(e.target, e);

            state.plateforms.forEach(function(pl) {
                if (mouseXY[0] > pl.imageX && mouseXY[0] < (pl.imageX + pl.img.width) && mouseXY[1] > pl.imageY && mouseXY[1] < (pl.imageY + pl.img.height)) {
                    state.selectedPlateform = pl;
                    state.dragging = true;
                    state.originalMouseX = mouseXY[0];
                    state.originalMouseY = mouseXY[1];
                    state.selectedPlateform.offsetX = mouseXY[0] - state.selectedPlateform.imageX;
                    state.selectedPlateform.offsetY = mouseXY[1] - state.selectedPlateform.imageY;
                }
            });
        }

        canvas2.onmousemove = function (e)
        {
            if (state.dragging) {
                state.canvas = e.target;
                var mouseXY = getMousePos(e.target, e);
                var diffX = mouseXY[0] - state.originalMouseX;
                var diffY = mouseXY[1] - state.originalMouseY;
                state.selectedPlateform.imageX = state.originalMouseX + diffX - state.selectedPlateform.offsetX;
                state.selectedPlateform.imageY = state.originalMouseY + diffY - state.selectedPlateform.offsetY;
                DrawAllScene();
                e.stopPropagation();
            }
        }

        state = {}
        state.dragging              = false;
        state.AvailablePlateforms   = [
                                        {img: new Image(), imageX: 54, imageY: 10, offsetX: 0, offsetY: 0},
                                        {img: new Image(), imageX: 61, imageY: 137, offsetX: 0, offsetY: 0},
                                        {img: new Image(), imageX: 10, imageY: 254, offsetX: 0, offsetY: 0},
                                        {img: new Image(), imageX: 10, imageY: 356, offsetX: 0, offsetY: 0}
                                      ];
        state.AvailablePlateforms[0].img.src = '../img/game/arrivee.png';
        state.AvailablePlateforms[1].img.src = '../img/game/nuage.png';
        state.AvailablePlateforms[2].img.src = '../img/game/plateforme2.png';
        state.AvailablePlateforms[3].img.src = '../img/game/plateforme3.png';

        state.AvailablePlateforms.forEach(function(pl) {
            pl.img.onload = function ()
            {
                Draw(canvas1, pl);
            }
        });

        state.plateforms = [];

        var backg = new Image();
        backg.src = '../img/game/fond.png';
        backg.onload = function ()
        {
            canvas2.getContext('2d').drawImage(backg, 0, 0);
        }

        var player = new Image();
        player.src = '../js/phaser/assets/games/starstruck/dude.png';
        player.onload = function ()
        {
            canvas2.getContext('2d').drawImage(player, 0, 0, 32, 48, 32, 550, 32, 48);
        }
    }
</script>
<script src="js/phaser/starstruck.js"></script>